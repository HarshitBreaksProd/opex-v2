services:
  backend:
    build:
      context: ./
      dockerfile: docker/backend.dockerfile
      args:
        - DATABASE_URL= ${DATABASE_URL}
    ports:
      - "3001:3001"
    environment:
      RESEND_API: ${RESEND_API}
      JWT_SECRET: ${JWT_SECRET}
      HTTP_PORT: ${HTTP_PORT}
      API_BASE_URL: ${API_BASE_URL}
      REDIS_URL: ${REDIS_URL}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      # - db
      - redis

  web-socket:
    build:
      context: ./
      dockerfile: docker/web-socket.dockerfile
    ports:
      - "8080:8080"
    environment:
      WS_PORT: ${WS_PORT}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      - redis

  engine:
    build:
      context: ./
      dockerfile: docker/engine.dockerfile
      args:
        - DATABASE_URL= ${DATABASE_URL}
    environment:
      MONGODB_URL: ${MONGODB_URL}
      REDIS_URL: ${REDIS_URL}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - redis
      - mongo
      # - db

  poller:
    build:
      context: ./
      dockerfile: docker/poller.dockerfile
    environment:
      BACKPACK_URL: ${BACKPACK_URL}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      - redis

  #   db:
  #     image: postgres:latest
  #     container_name: opex-pg
  #     restart: always
  #     ports:
  #       - "5432:5432"
  #     environment:
  #       POSTGRES_USER: postgres
  #       POSTGRES_PASSWORD: postgres
  #       POSTGRES_DB: opex
  #     volumes:
  #       - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: opex-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:latest
    container_name: opex-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  redis_data:
  mongo_data:
#   postgres_data:
